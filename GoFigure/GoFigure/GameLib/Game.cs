//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Timers;
using System.Windows.Media;

public class Game
{
    enum Movement {LEFT, RIGHT, STOPPED }
    private Level level
	{
		get;
		set;
	}

	private MediaPlayer mediaplayer
	{
		get;
		set;
	}

	private Timer thread
	{
		get;
		set;
	}

    private Movement movement
    {
        get;
        set;
    }

    private bool testing
	{
		get;
		set;
	}

	private Graphics graphics
	{
		get;
		set;
	}

	public virtual Level Level
	{
		get;
		set;
	}

    public virtual void play()
    {
        update();
        if (thread.Enabled == true)
        {
            thread.Interval += 500;
        }
    }

	public Game(Level level, bool testing)
	{
        this.level = level;
        this.testing = testing;
        thread = new Timer();
        movement = Movement.STOPPED;
	}

	private bool checkForEnd()
	{
        throw new System.NotImplementedException();
    }

	public virtual void exit()
	{
		throw new System.NotImplementedException();
	}

	private bool validateNextPosition(GameObject gameObject)
	{
        bool flag = true;
        if (gameObject.collison)
        {
            flag = false;
        }
        if(gameObject is Spike)
        {
            level.character.dead = true;
            //execute end sequence
        }
        if(gameObject is PressurePlate)
        {
            //activates the pressure plate
            ((PressurePlate)gameObject).activate();
        }
        return flag;
    }

	private void endSequence()
	{
		throw new System.NotImplementedException();
	}

	private void update()
	{
        if (movement == Movement.LEFT)
        {
            //validate the next position
            level.character.changeSpeed(20);
        }
        else if(movement == Movement.RIGHT)
        {
            //validate the next position
            level.character.changeSpeed(-20);
        }
	}

}

